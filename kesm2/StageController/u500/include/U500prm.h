
   #ifndef __U500PRM_H__
   #define __U500PRM_H__

//*****************************************************************************
// Procedure to add a new parameter
//   1) Add to DSP firmware   see "PAG001" in INIT.ASM
//   2) Update "prmtable" array in axis or general area.
//   3) Add default data to "prmdft" array
//   4) increment "pctaxes" if axis prm or "pctgen2" if general prm
//   5) Note: "PRM_SIZE" is needed by VB parameter editor ( updated automatically )
//
//   Note: Firmware must be modified if parameter size exceeds 512*4 = 2048
//        ( see PAA00Z in INIT.ASM )
//*****************************************************************************

SHORT pctgenl=100;       // number of general prms ( 100 is max, cannot add more )
SHORT pctaxes=89;        // number of axis parameters ( <= 100, 0-87 => 88  )
SHORT pctgen2=2;         // number of gen prms added after axis prms ( 500.. )

/* v4.10 following section moved from u500.dat, used by QLIB */
char           ftset[] = { "U500.CFG" } ;
SHORT          ftsize = sizeof (ftset);
char           ftprm[] = { "U500.PRM" } ;
char           ftjwp[] = { "U500.JWP" } ;
char           pcpso[] = { "PCPSO.FR" } ;

char *U511defprm[] =
{

     " ",                 // auto enable axis names 

     " ",                 // auto exec program 
     " ",                 // axis cal file 

     "u511.prm" ,        // parameter file 

   #ifdef PCAT           // firmware file 
     "u500c.jwp" ,
   #else
     "a:\\u511.jwp" ,
   #endif

     " ",                 // mcode file 

   #if !defined U11EMULATE
     "glbsub.prg",        // global subroutine file 
   #else
     " ",                  // global subroutine file 
   #endif
// pso 
     " ",                 // firmware file 

// serial ports 
//    baud, data, stop, parity, EOS, int IO, config word 
     "9600", "8", "1", "N" , "10", "yes", "6" ,"21", "0", //com1 
     "9600", "8", "1", "N" , "10", "yes", "6", "21", "0", //com 2 

// gpib 
     "2", "10", "0", "30" , "0" ,    // address, eos, PPR bit, timeout, config word 

// jog parameters - in machine steps / ms and machine steps 
     "10"   ,"10"    ,"10"    ,"10"    ,      // low 
     "25"   ,"25"    ,"25"    ,"25"    ,      // high 
     "4000" ,"4000"  ,"4000"  ,"4000"  ,      // dist 

// auto tune parameters 
     "80000", "35", "1", ".7" ,    // distance in machine steps 

     "no",                         // enable speaker 
     " ",                          // default password 

     "",  // THIS IS DUMMY FOR LAST PARAMETER 
};

/******************************************************************************
     Default parameters, each parameter needs 2 "shorts"

     Same format as DSP, see "Y:PAA001" in "INIT.ASM" except the offset into the
     PCs prm data is twice the DSPs offset because each DSP 24 bit word is
     represented by two shorts here.

     Each DSP 24 bit word is represented by two shorts here...

     PC       msb.............lsb
     s1,s2 -> s1(8bit) | s2(16bit) = 24 bit DSP word

     little endian byte order...
		    address
     word (msb|lsb)   +0      lsb
		      +1      msb

*******************************************************************************/
USHORT prmdft[] = {
// 0..99 ( <- this is not the "prm number", but the offset into the prm block * 2)
	0,1,0,10,0,10,0,10,0,10,
	0,150,0,150,0,150,0,150,0x80,0x0000,
	0x80,0x0001,0x80,0x0002,0x80,0x0003,0x00,0x0000,0x00,0x0000,
	0x00,0x0000,0x00,0x0000,0x80,0x00f0,0,0,0x00,0x1000,
	0x00,0x1000,0x00,0x1000,0x00,0x1000,0x00,0x1000,0x7F, 0xFF00,
	0x00,0x1000,0x00,0x1000,0x00,0x1000,0x00,0x1000,0x00,0x1000,
	0x7F,0xFF00,0x00,0x1000,0x00,0x1000,0x00,0x1000,0x00,0x1000,
	0x00,0x1000,0x7F,0xFF00,0x00,0x1000,0x00,0x1000,0x00,0x1000,
	0x00,0x1000,0x00,0x1000,0x7F,0xFF00,0,150,0,150,
	0,150,0,150,0x0000,0x0001,0x0000,0x0000, 0x0000,0x0001,

// 100..199
	0x0000,0x0000,0x0000,0x0001,0x0000,0x0000,0x0000,0x0001,0x0000,0x0000,
	0x0000,0x0001,0x0000,0x0000,0x0000,0x0001,0x0000,0x0000,0x0000,0x0001,
	0x0000,0x0000,0x0000,0x0001,0x0000,0x0000,0x000,0x2c40,0x000,0x2c40,
	0x000,0x2c40,0x000,0x2c40,0x00,0x1900,0x00,0x1900,0x00,0x1900,
	0x00,0x1900,0x00,0x1900,0x00,0x1900,0x00,0x1900,0x00,0x1900,
	0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0x00,0x0100,0x00,0x0100,
	0x00,0x0100,0x00,0x0100,0x00,0x6e00,0x0,0x6e00,0x0,0x6e00,
	0x0,0x6e00,0,1000,0,1000,0,1000,0,1000,
	0,4000,0,4000,0,4000,0,4000,10,0,

// 200..299
	10,0,10,0,10,0,0,0,0,0,
	0,0,0,0,0xff80,0x0000,0xff80,0x0000,0xff80,0x0000,
//        10,0,10,0,10,0,0x26,0x6666,0x26,0x6666,
//        0x26,0x6666,0x26,0x6666,0xff80,0x0000,0xff80,0x0000,0xff80,0x0000,

	0xff80,0x0000,0x00,0x0001,0x00,0x0001,0x00,0x0001,0x00,0x0001,
	0x7f,0xffff,0x7f,0xffff,0x7f,0xffff,0x7f,0xffff,0xff,0xffff,
	0xff,0xffff,0xff,0xffff,0xff,0xffff,0,2000,0,2000,
	0,2000,0,2000,0,0,0,0,0,0,
	0,0,0x00,0x0000,0x00,0x0000,0x00,0x0000,0x00,0x0000,
	0x00,0x032,0x00,0x032,0x00,0x032,0x00,0x032,0x00,0x1388,
	0x00,0x1388,0x00,0x1388,0x00,0x1388,0x01,0x86a0,0x01,0x86a0,
	0x01,0x86a0,0x01,0x86a0,0x00,0x0100,0x00,0x0100,0x00,0x0100,
	
// 300..399
	0x00,0x0100,0x00,0x0000,0x00,0x0000,0x00,0x0000,0x00,0x0000,
	0x00,0x0000,0x00,0x0000,0x00,0x0000,0x00,0x0000,0x00,0x0000,
	0x00,0x0000,0x00,0x0000,0x00,0x0000,0x00,0x0000,0x00,0x0000,
	0x00,0x0000,0x00,0x0000,0x00,0x0000,0x00,0x0000,0x00,0x0000,
	0x00,0x0000,0x00,0x0000,0x00,0x0000,0x00,0x0000,0x00,0x0000,
	0,10,0,10,0,10,0,10,0x3f,0xffff,
	0x3f,0xffff,0x3f,0xffff,0x3f,0xffff,0,0,0,0,
	0,0,0,0,0,1,0,2,0,3,
	0,4,0,0,0,0,0,0,0,0,
	0x00,0x0004,0x00,0x0004,0x00,0x0004,0x00,0x0004,0x00,0x000a,
	
// 400..499
	0x00,0x000a,0x00,0x000a,0x00,0x000a,0x00,39000,0x00,39000,
	0x00,39000,0x00,39000,0x00,2500,0x00,2500,0x00,2500,
	0x00,2500,0x00,0x0064,0x00,0x0064,0x00,0x0064,0x00,0x0064,
	0,3,0,4,0,3,0,4,0,3,
	0,4,0,3,0,4,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,
	0,0,0x26,0x6666,0x26,0x6666,0x26,0x6666,0x26,0x6666,
	0,4000,0,4000,0,4000,0,4000,0,4000,
	0,4000,0,4000,0,4000,0,0,0,0,
	0,0,0,0,0x59,0x9998,0x59,0x9998,0x59,0x9998,
	

// 500..599
	0x59,0x9998,0x2c,0xcccc,0x2c,0xcccc,0x2c,0xcccc,0x2c,0xcccc,
	0,0,0,0,0,0,0,0,0,1,
	0,2,0,3,0,4,0xff,0xffff,0xff,0x319f,
	0xff,0xffff,0xff,0x319f,0xff,0xffff,0xff,0x319f,0xff,0xffff,
	0xff,0x319f,0xff,0xffff,0xf0,0xef87,0xff,0xffff,0xf0,0xef87,
	0xff,0xffff,0xf0,0xef87,0xff,0xffff,0xf0,0xef87,0xff,0xffff,
	0xf0,0x0000,0xff,0xffff,0xf0,0x0000,0xff,0xffff,0xf0,0x0000,
	0xff,0xffff,0xf0,0x0000,0xff,0xffff,0xf0,0x0000,0xff,0xffff,
	0xf0,0x0000,0xff,0xffff,0xf0,0x0000,0xff,0xffff,0xf0,0x0000,
	0xff,0xffff,0xf0,0x8e00,0xff,0xffff,0xf0,0x8e00,0xff,0xffff,
	

// 600..699
	0xf0,0x8e00,0xff,0xffff,0xf0,0x8e00,0xff,0xffff,0xff,0x9e78,
	0xff,0xffff,0xff,0x9e78,0xff,0xffff,0xff,0x9e78,0xff,0xffff,
	0xff,0x9e78,0xff,0xffff,0xf0,0x0000,0xff,0xffff,0xf0,0x0000,
	0xff,0xffff,0xf0,0x0000,0xff,0xffff,0xf0,0x0000,0,0,
	0,0,0,0,0,0,0x7f,0xffff,0x7f,0xffff,
	0x7f,0xffff,0x7f,0xffff,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0,1,0,1,0,1,0,1,0,4000,
	0,4000,0,4000,0,4000,0x00,0x0100,0x00,0x0100,
	0x00,0x0100,0x00,0x0100,0x00,0xd800,0x00,0x00,0x0000,0x0000,
	

// 700..799
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, 
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,

// 800..899
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0001,0x0000,0x0001,0x0000,0x0001,
	0x0000,0x0001,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x80  ,   'X',  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,
// 900..
	0x80  ,   'Y',  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,
	0x80  ,   'Z',  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,
	0x80  ,   'U',  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,
	0x00  ,0x0000,  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,
	0x00  ,0x0000,  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,
	0x00  ,0x0000,  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,
	0x00  ,0x0000,  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,  0x00,0x0000,
};

/*      next 770        */
/*      654 to 669 for additional scaling factor        */
/*      698 to 705 for additional steps/rev  */
/*      706 to 713 for additional home switch-marker high  */
/*      714 to 721 for additional home offset high  */

SHORT prmdfts = sizeof (prmdft) / sizeof (prmdft[0]);

// this is needed by the VB application
#define PRM_SIZE  ( sizeof(prmdft)/sizeof(prmdft[0]) )

/******************************************************************************
// The following table is used to edit parameters. Each parameter needs four
// SHORTS.
//  The first is the offset into the parameter data (DSP offset*2).
//  The second is the data type.
//  The third and fourth are used for max/min checking
//   ( ... find another prm with the same data type and use as an example )
//

	format for parameters edit
	 1int for prmset[] location   ( offset into prm data, DSP offset * 2 )
	 1int for case, 0 : + number
			1 : drive map case, 0x80,0x40,0x20,0x10 pl 1-4 + 14 char name
			2 : gantry define,
			3 : bit pattern, yes/no, 0 yes, 1 no  
			4 : convert factor 2^7(fh)+2^15(int)+2^23(fl) (4 int)
			  : plus 2 int for 2^16(fll)
			5 : + number 16.8 format
			6 : +/- number 2int
			7 : +/- number 4int ( 150-164 (low) pair with 706-720 (high) )
			8 : number /4 (show MS, keep QMS), 16.8 format
			9 : bit pattern, yes/no, 1 yes, 0 no  
		       10 : this is a spare position
		       11 : % type, 7fffff is 100%, 10000 is 1%
		       12 : +/- number 2.21 format
		       13 : 48 bit pattern 4int
		       14 : Hex number 2 int
		       15 : 48 bit data, keep in 698+478, 700+480, 702+482, 704+484
		       16 : 8.3 ASCII character
		       17 : + integer, filter time constant = (1-e^(-3/(4*t)))*8388607
		       18 : +/- number 2.21 format x5, N0,N1,N2,D1,D2 notch filter coeff
	 2int for max. checking
******************************************************************************/

USHORT prmtable[] = {

// general prm #0..17

  0,0,0,4,           34,3,0,0x0080,     36,0,0,255,        890,1,0,3,
  900,1,0,3,         910,1,0,3,         920,1,0,3,          26,2,0,3,

//0,0,0,4,           34,3,0,0x0080,     36,0,0,255,        18,1,0,3,
//20,1,0,3,          22,1,0,3,          24,1,0,3,          26,2,0,3,

  28,2,0,3,          30,2,0,3,          32,2,0,3,          446,7,0,0,  
  448,7,0,0,         450,7,0,0,         452,7,0,0,         694,14,0,0, 
  696,14,0,0,        0,10,0,0,

// #18..35
  2,0,0,20,          10,0,0,32000,      34,3,1,0x0001,     34,3,1,0x0010,     
  38,5,0x7f,0xffff,  40,5,0x7f,0xffff,  42,5,0x7f,0xffff,  44,5,0x7f,0xffff,  
  46,5,0x7f,0xffff,  48,5,0x7f,0xffff,  86,0,0,32000,      430,0,0,8,         
  432,0,0,8,         864,0,0,100,         0,10,0,0,          0,10,0,0,          
  0,10,0,0,          0,10,0,0,

// #36..53
  4,0,0,20,          12,0,0,32000,      34,3,1,0x0002,     34,3,1,0x0020,  
  50,5,0x7f,0xffff,  52,5,0x7f,0xffff,  54,5,0x7f,0xffff,  56,5,0x7f,0xffff, 
  58,5,0x7f,0xffff,  60,5,0x7f,0xffff,  88,0,0,32000,      434,0,0,8,
  436,0,0,8,         866,0,0,100,         0,10,0,0,          0,10,0,0,
  0,10,0,0,          0,10,0,0,

// #54..71
  6,0,0,20,          14,0,0,32000,      34,3,1,0x0004,     34,3,1,0x0040,        
  62,5,0x7f,0xffff,  64,5,0x7f,0xffff,  66,5,0x7f,0xffff,  68,5,0x7f,0xffff, 
  70,5,0x7f,0xffff,  72,5,0x7f,0xffff,  90,0,0,32000,      438,0,0,8,                  
  440,0,0,8,         868,0,0,100,         0,10,0,0,          0,10,0,0,            
  0,10,0,0,          0,10,0,0,

// #72..89
  8,0,0,20,          16,0,0,32000,      34,3,1,0x0008,     34,3,1,0x0080,
  74,5,0x7f,0xffff,  76,5,0x7f,0xffff,  78,5,0x7f,0xffff,  80,5,0x7f,0xffff, 
  82,5,0x7f,0xffff,  84,5,0x7f,0xffff,  92,0,0,32000,      442,0,0,8,
  444,0,0,8,         870,0,0,100,         0,10,0,0,          0,10,0,0, 
  0,10,0,0,          0,10,0,0,

// #90..99
  754,0,0,4096,      756,6,0x7f,0xffff, 758,0,0,4096,      760,6,0x7f,0xffff,
  762,0,0,4096,      764,6,0x7f,0xffff, 766,0,0,4096,      768,6,0x7f,0xffff, 
  802,0,0,8,         852,0,0x7f,0xffff,

//*****************************************************************************
// axis prm #100..? 
  94,4,654,0,        110,4,662,0,       126,3,1,0x0001,    126,3,1,0x0002,
  134,5,0x7f,0xffff, 142,5,0x7f,0xffff, 158,7,0,0,         150,7,0,0,
  422,0,0x7f,0xffff, 126,3,1,0x0004,    246,0,0x7f,0xffff, 126,3,1,0x0008,    
  126,3,1,0x0010,    126,3,1,0x0020,    126,3,1,0x0080,    126,3,1,0x0040, 
  166,5,0x7f,0xffff, 174,8,0x7f,0xffff, 182,0,0x7f,0xffff, 190,0,0x7f,0xffff, 
  198,0,0x7f,0xffff, 206,0 ,0x7f,0xffff, 214,7,0,0,         230,7,0,0,
 // 198,0,0x7f,0xffff, 206,11,0x7f,0,    214,7,0,0,         230,7,0,0,

  262,9,0,0x0080,    270,0,0x7f,0xffff, 278,0,0x7f,0xffff, 286,0,0x7f,0xffff,
  294,0,0x7f,0xffff, 302,0,0x7f,0xffff, 310,12,0,0,        318,12,0,0,                                                       
  326,12,0,0,        334,12,0,0,        342,12,0,0,        350,0,0x00,0xffff,
  358,11,0x7f,0x0,   366,0,0x00,0xffff, 374,0,0,200,       254,0,0,200, 
  486,0,0,0xffff,    638,0,0,0xffff,    382,0,0,5,         390,0,0x01,0x0000, 
  478,15,0,0,        510,0,0,359,       494,11,0x7f,0x0,   502,11,0x7f,0x0, 
  462,11,0x7f,0x0,   470,0,0,16383,     406,0,0x7f,0xffff, 414,0,0x7f,0xffff, 
  398,0,0x0,0x0100,  646,11,0x7f,0x0,   518,0,0,32,         526,13,0,0,                      
  542,13,0,0,        558,13,0,0,        574,13,0,0,        590,13,0,0,      
  606,13,0,0,        622,13,0,0,        670,0,0,32000,     678,0,0x3,0x2000,
  126,3,1,0x0100,    686,5,0x7f,0xffff, 722,0,0xff,0xffff, 730,0,0,360,
  738,0,0xff,0xffff, 746,0,0,360,       126,3,1,0x0200,    126,3,1,0x0400,
  126,3,1,0x800,     126,3,1,0x1000,    126,3,1,0x2000,    770,7,0,0,
  786,7,0,0,         804,0,0x7f,0xffff, 812,0,0x7f,0xffff, 820,6,0x7f,0xffff,
  828,6,0x7f,0xffff, 836,5,0x7f,0xffff, 844,6,0x7f,0xffff, 856,17,0x7f,0xffff,  
  126,3,1,0x4000,    126,9,1,0x8000,    874,6,0x7F,0xffff, 882,6,0x7F,0xffff,
  930,18,0,0,

// axis prm #200..? 
  98,4,656,0,        114,4,664,0,       128,3,1,0x0001,    128,3,1,0x0002,
  136,5,0x7f,0xffff, 144,5,0x7f,0xffff, 160,7,0,0,         152,7,0,0,
  424,0,0x7f,0xffff, 128,3,1,0x0004,    248,0,0x7f,0xffff, 128,3,1,0x0008,
  128,3,1,0x0010,    128,3,1,0x0020,    128,3,1,0x0080,    128,3,1,0x0040,
  168,5,0x7f,0xffff, 176,8,0x7f,0xffff, 184,0,0x7f,0xffff, 192,0,0x7f,0xffff,
  200,0,0x7f,0xffff, 208,0,0x7f,0xffff,   216,7,0,0,         232,7,0,0,
//  200,0,0x7f,0xffff, 208,11,0x7f,0x0,   216,7,0,0,         232,7,0,0,

  264,9,0,0x0080,    272,0,0x7f,0xffff, 280,0,0x7f,0xffff, 288,0,0x7f,0xffff,
  296,0,0x7f,0xffff, 304,0,0x7f,0xffff, 312,12,0,0,        320,12,0,0,
  328,12,0,0,        336,12,0,0,        344,12,0,0,        352,0,0x00,0xffff,
  360,11,0x7f,0x0,   368,0,0x00,0xffff, 376,0,0,200,       256,0,0,200,
  488,0,0,0xffff,    640,0,0,0xffff,    384,0,0,5,         392,0,0x01,0x0000,
  480,15,0,0,        512,0,0,359,       496,11,0x7f,0x0,   504,11,0x7f,0x0, 
  464,11,0x7f,0x0,   472,0,0,16383,     408,0,0x7f,0xffff, 416,0,0x7f,0xffff,
  400,0,0x0,0x0100,  648,11,0x7f,0x0,   520,0,0,32,         530,13,0,0,
  546,13,0,0,        562,13,0,0,        578,13,0,0,        594,13,0,0,       
  610,13,0,0,        626,13,0,0,        672,0,0,32000,     680,0,0x3,0x2000,
  128,3,1,0x0100,    688,5,0x7f,0xffff, 724,0,0xff,0xffff, 732,0,0,360,
  740,0,0xff,0xffff, 748,0,0,360,       128,3,1,0x0200,    128,3,1,0x0400,
  128,3,1,0x0800,    128,3,1,0x1000,    128,3,1,0x2000,    772,7,0,0,
  788,7,0,0,         806,0,0x7f,0xffff, 814,0,0x7f,0xffff, 822,6,0x7f,0xffff,
  830,6,0x7f,0xffff, 838,5,0x7f,0xffff, 846,6,0x7f,0xffff, 858,17,0x7f,0xffff,
  128,3,1,0x4000,    128,9,1,0x8000,    876,6,0x7F,0xffff, 884,6,0x7F,0xffff,
  940,18,0,0,

// axis prm #300..? 
  102,4,658,0,       118,4,666,0,       130,3,1,0x0001,    130,3,1,0x0002,
  138,5,0x7f,0xffff, 146,5,0x7f,0xffff, 162,7,0,0,         154,7,0,0,
  426,0,0x7f,0xffff, 130,3,1,0x0004,    250,0,0x7f,0xffff, 130,3,1,0x0008,
  130,3,1,0x0010,    130,3,1,0x0020,    130,3,1,0x0080,    130,3,1,0x0040,
  170,5,0x7f,0xffff, 178,8,0x7f,0xffff, 186,0,0x7f,0xffff, 194,0,0x7f,0xffff,
  202,0,0x7f,0xffff, 210,0,0x7f,0xffff, 218,7,0,0,         234,7,0,0,
//  202,0,0x7f,0xffff, 210,11,0x7f,0x0,   218,7,0,0,         234,7,0,0,

  266,9,0,0x0080,    274,0,0x7f,0xffff, 282,0,0x7f,0xffff, 290,0,0x7f,0xffff,
  298,0,0x7f,0xffff, 306,0,0x7f,0xffff, 314,12,0,0,        322,12,0,0,       
  330,12,0,0,        338,12,0,0,        346,12,0,0,        354,0,0x00,0xffff,
  362,11,0x7f,0x0,   370,0,0x00,0xffff, 378,0,0,200,       258,0,0,200,       
  490,0,0,0xffff,    642,0,0,0xffff,    386,0,0,5,         394,0,0x01,0x0000,
  482,15,0,0,        514,0,0,359,       498,11,0x7f,0x0,   506,11,0x7f,0x0,  
  466,11,0x7f,0x0,   474,0,0,16383,     410,0,0x7f,0xffff, 418,0,0x7f,0xffff, 
  402,0,0x0,0x0100,  650,11,0x7f,0x0,   522,0,0,32,         534,13,0,0,                                  
  550,13,0,0,        566,13,0,0,        582,13,0,0,        598,13,0,0,      
  614,13,0,0,        630,13,0,0,        674,0,0,32000,     682,0,0x3,0x2000, 
  130,3,1,0x0100,    690,5,0x7f,0xffff, 726,0,0xff,0xffff, 734,0,0,360,
  742,0,0xff,0xffff, 750,0,0,360,       130,3,1,0x0200,    130,3,1,0x0400,
  130,3,1,0x0800,    130,3,1,0x1000,    130,3,1,0x2000,    774,7,0,0,
  790,7,0,0,         808,0,0x7f,0xffff, 816,0,0x7f,0xffff, 824,6,0x7f,0xffff,
  832,6,0x7f,0xffff, 840,5,0x7f,0xffff, 848,6,0x7f,0xffff, 860,17,0x7f,0xffff,
  130,3,1,0x4000,    130,9,1,0x8000,    878,6,0x7F,0xffff, 886,6,0x7F,0xffff,
  950,18,0,0,

// axis prm #400..? 
  106,4,660,0,       122,4,668,0,       132,3,1,0x0001,    132,3,1,0x0002,
  140,5,0x7f,0xffff, 148,5,0x7f,0xffff, 164,7,0,0,         156,7,0,0,
  428,0,0x7f,0xffff, 132,3,1,0x0004,    252,0,0x7f,0xffff, 132,3,1,0x0008, 
  132,3,1,0x0010,    132,3,1,0x0020,    132,3,1,0x0080,    132,3,1,0x0040,
  172,5,0x7f,0xffff, 180,8,0x7f,0xffff, 188,0,0x7f,0xffff, 196,0,0x7f,0xffff,
  204,0,0x7f,0xffff, 212,0,0x7f,0xffff, 220,7,0,0,         236,7,0,0,
//  204,0,0x7f,0xffff, 212,11,0x7f,0x0,   220,7,0,0,         236,7,0,0,

  268,9,0,0x0080,    276,0,0x7f,0xffff, 284,0,0x7f,0xffff, 292,0,0x7f,0xffff,
  300,0,0x7f,0xffff, 308,0,0x7f,0xffff, 316,12,0,0,        324,12,0,0,       
  332,12,0,0,        340,12,0,0,        348,12,0,0,        356,0,0x00,0xffff, 
  364,11,0x7f,0x0,   372,0,0x00,0xffff, 380,0,0,200,       260,0,0,200, 
  492,0,0,0xffff,    644,0,0,0xffff,    388,0,0,5,         396,0,0x01,0x0000,
  484,15,0,0,        516,0,0,359,       500,11,0x7f,0x0,   508,11,0x7f,0x0,  
  468,11,0x7f,0x0,   476,0,0,16383,     412,0,0x7f,0xffff, 420,0,0x7f,0xffff, 
  404,0,0x0,0x0100,  652,11,0x7f,0x0,   524,0,0,32,         538,13,0,0,      
  554,13,0,0,        570,13,0,0,        586,13,0,0,        602,13,0,0,      
  618,13,0,0,        634,13,0,0,        676,0,0,32000,     684,0,0x3,0x2000,  
  132,3,1,0x0100,    692,5,0x7f,0xffff, 728,0,0xff,0xffff, 736,0,0,360,
  744,0,0xff,0xffff, 752,0,0,360,       132,3,1,0x0200,    132,3,1,0x0400,
  132,3,1,0x0800,    132,3,1,0x1000,    132,3,1,0x2000,    776,7,0,0,
  792,7,0,0,         810,0,0x7f,0xffff, 818,0,0x7f,0xffff, 826,6,0x7f,0xffff,
  834,6,0x7f,0xffff, 842,5,0x7f,0xffff, 850,6,0x7f,0xffff, 862,17,0x7f,0xffff,
  132,3,1,0x4000,    132,9,1,0x8000,    880,6,0x7F,0xffff, 888,6,0x7F,0xffff,
  960,18,0,0,

//*****************************************************************************
// general prm #500..
  854,0,0x7f,0xffff, 872,0,0,16,

};

SHORT pctgenp=18;
SHORT pctgenps=18;
SHORT pct[]= {
	0,18,36,54,72,90,100,
	118,136,154,172,173,
	191,209,227,245,246,
	264,282,300,318,319,
	337,355,373,391,392
};
SHORT pcts = sizeof (pct) / sizeof (pct[0]);
 
//added v4.14, config info for NT version 
SHORT commp[] = {                        /*     any change of commp / commd  */
	5, 2, 9, 18, 26,                 /*  need adj commp_chk,_deft,_back */
};
SHORT commps = sizeof (commp) / sizeof (commp[0]);
SHORT commd[] = {
	0x3, 0x4, 0x7,
	0x200, 0x210, 0x300, 0x310, 0x350, 0x360,
	1, 2, 3, 4, 5,
	1, 2, 3, 4, 5, 6, 7, 8, 
	1, 2, 3, 4, 5, 6, 7, 8,
};

long tuneinfo[] = {
	0,
	5*256, 10000, 32, 1, 1, 1, 1, 0, 0, 0,
	5*256, 10000, 32, 1, 1, 1, 1, 0, 0, 0,
	5*256, 10000, 32, 1, 1, 1, 1, 0, 0, 0,
	5*256, 10000, 32, 1, 1, 1, 1, 0, 0, 0,
};
SHORT tuneinfos = sizeof (tuneinfo) / sizeof (tuneinfo[0]);

   #endif    // __U500PRM_H__ 
